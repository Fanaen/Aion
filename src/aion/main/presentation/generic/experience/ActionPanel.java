/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package aion.main.presentation.generic.experience;

import aion.main.core.EndExperienceException;
import aion.main.core.Experience;
import aion.main.core.environment.Position;
import aion.main.core.time.Sequence;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Fanaen
 */
public class ActionPanel extends javax.swing.JPanel implements Experience.ExperienceListener {

    // -- Attributes --
    private Experience experience;
    private GenericExperiencePanel genericPanel;
    
    private List<Position> positions = null;
    
    /**
     * Creates new form ActionPanel
     */
    public ActionPanel(Experience experience, GenericExperiencePanel panel) {
        initComponents();
        this.experience = experience; 
        experience.addListener(this);
        
        // -- Shortcuts --
        positions = experience.getPositions();
        genericPanel = panel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        skipButton = new javax.swing.JButton();

        jButton1.setText("Poursuivre");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setText("Intercepteur");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        skipButton.setText("Ignorer la séquence");
        skipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skipButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(skipButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            experience.nextAction();
        } catch (EndExperienceException ex) {
            endExperience();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        for (Iterator<Position> it = positions.iterator(); it.hasNext();) {
            Position position = it.next();
            
            if(position.getShortcut().equals(evt))
            {
                genericPanel.moveToPosition(position);
            }
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void skipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButtonActionPerformed
        int answer = (new JOptionPane()).showConfirmDialog(null, 
                "Souhaitez vous réellement ignorer cette séquence ?", 
                "Ignorer la séquence", 
                JOptionPane.YES_NO_OPTION);
        System.out.println(answer);
        
        if(answer == 0)
        {
            try {
                experience.skipSequence();
            } catch (EndExperienceException ex) {
                endExperience();
            }
        }
    }//GEN-LAST:event_skipButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton skipButton;
    // End of variables declaration//GEN-END:variables

    private void endExperience() {
        (new JOptionPane()).showMessageDialog(null, 
                    "L'expérience est terminée, vous pouvez récupérer les données dans le dossier Data/[Experience]/[JeuDeDonnées].", 
                    "Experience terminée !", 
                    JOptionPane.INFORMATION_MESSAGE);
            jButton1.setEnabled(false);
            skipButton.setEnabled(false);
    }

    @Override
    public void onSubjectStarted() { skipButton.setEnabled(false); }
    public void onSubjectFinished() { skipButton.setEnabled(false); }
    public void onSequenceStarted() { skipButton.setEnabled(true); }
    public void onSequenceFinished() { skipButton.setEnabled(false); }
    public void onSequenceChronoStarted() { skipButton.setEnabled(false); }
    public void onEstimatedUpdate(Sequence sequence, Position position) { }
    public void onSequenceChronoFinished() { skipButton.setEnabled(false); }
    public void onMove(long time, Position position) { }
    public void onExperienceFinished() { skipButton.setEnabled(false); }
    
}
